% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_elpicycle.R
\name{ti_elpicycle}
\alias{ti_elpicycle}
\title{Inferring a trajectory inference using ElPiGraph cycle}
\usage{
ti_elpicycle(topology = "cycle", NumNodes = 50L, NumEdges = 100000L,
  InitNodes = 2L, Mu = 0.1, Lambda = 0.01,
  MaxNumberOfIterations = 10L, eps = 0.01, CenterData = FALSE,
  config = dynwrap::container_config())
}
\arguments{
\item{topology}{discrete; The kind of topology to detect (default: \code{"cycle"};
values: {\code{"cycle"}})}

\item{NumNodes}{integer; The number of nodes of the principal graph (default:
\code{50L}; range: from \code{2L} to \code{1000L})}

\item{NumEdges}{integer; The maximum number of edges (default: \code{100000L};
range: from \code{2L} to \code{100000L})}

\item{InitNodes}{integer; Number of points to include in the initial graph
(default: \code{2L}; range: from \code{2L} to \code{1000L})}

\item{Mu}{numeric; Controls the elastic energy (default: \code{0.1}; range: from
\code{0.001} to \code{1L})}

\item{Lambda}{numeric; Controls the elastic energy (default: \code{0.01}; range:
from \code{0.001} to \code{1L})}

\item{MaxNumberOfIterations}{integer; Maximum number of steps to embed the
nodes (default: \code{10L}; range: from \code{1L} to \code{1000L})}

\item{eps}{numeric; Minimal relative change in the position of the nodes to
stop embedment (default: \code{0.01}; range: from \code{0.001} to \code{1L})}

\item{CenterData}{logical; Should data and initial node positions be centered?}

\item{config}{A container config. See \code{\link[=container_config]{container_config()}} for more information.}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using \href{https://github.com/Albluca/ElPiGraph.R}{ElPiGraph cycle}.

This method was wrapped inside a
\href{https://github.com/dynverse/ti_elpicycle}{container}.
The original code of this method is available
\href{https://github.com/Albluca/ElPiGraph.R}{here}.
}
