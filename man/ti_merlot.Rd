% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_merlot.R
\name{ti_merlot}
\alias{ti_merlot}
\title{Inferring a trajectory inference using MERLoT}
\usage{
ti_merlot(sigma = "local", distance = "euclidean", ndim = 20L,
  density_norm = TRUE, n_local_lower = 5L, n_local_upper = 7L,
  w_width = 0.01, n_components_to_use = 3, N_yk = 100,
  lambda_0 = 8e-10, mu_0 = 0.0025, increaseFactor_mu = 20,
  increaseFactor_lambda = 20, FixEndpoints = FALSE,
  config = dynwrap::container_config())
}
\arguments{
\item{sigma}{discrete; Diffusion scale parameter of the Gaussian kernel. A
larger sigma might be necessary if the eigenvalues can not be found because of
a singularity in the matrix. Must be one of:\itemize{\item A character vector:
\code{"local"} (default) or \code{"global"},\item a numeric global sigma -- a
global sigma will be calculated using
\code{\link[destiny:find_sigmas]{destiny::find_sigmas()}}\item or a
\code{\link[destiny:Sigmas-class]{destiny::Sigmas-class()}} object.} (default:
\code{"local"}; values: {\code{"local"}, \code{"global"}})}

\item{distance}{discrete; A \code{\link[stats:dist]{stats::dist()}} object, or
a character vector specifying which distance metric to use. Allowed
measures:\itemize{\item Euclidean distance (default),\item cosine distance
(1-corr(c_1, c_2)), or\item rank correlation distance (1-corr(rank(c_1),
rank(c_2)))} (default: \code{"euclidean"}; values: {\code{"euclidean"}, \code{"cosine"},
\code{"rankcor"}})}

\item{ndim}{integer; Number of eigenvectors/dimensions to return (default:
\code{20L}; range: from \code{2L} to \code{20L})}

\item{density_norm}{logical; Logical. If TRUE, use density normalisation}

\item{n_local_lower}{integer; If sigma == 'local', the
\code{n_local_lower}:\code{n_local_upper} nearest neighbor(s) determine(s) the
local sigma (default: \code{5L}; range: from \code{2L} to \code{20L})}

\item{n_local_upper}{integer; See \code{n_local_lower} (default: \code{7L}; range:
from \code{2L} to \code{20L})}

\item{w_width}{numeric; Window width to use for deciding the branch cutoff
(default: \code{0.01}; range: from \code{1e-04} to \code{1})}

\item{n_components_to_use}{integer; Which components to use in downstream
analysis (default: \code{3}; range: from \code{2} to \code{20})}

\item{N_yk}{integer; Number of nodes for the elastic principal tree (default:
\code{100}; range: from \code{2} to \code{1000})}

\item{lambda_0}{numeric; Principal elastic tree energy function parameter.
(default: \code{8e-10}; range: from \code{1e-12} to \code{1e-06})}

\item{mu_0}{numeric; Principal elastic tree energy function parameter.
(default: \code{0.0025}; range: from \code{5e-04} to \code{0.005})}

\item{increaseFactor_mu}{numeric; Factor by which the mu will be increased for
the embedding (default: \code{20}; range: from \code{2} to \code{50})}

\item{increaseFactor_lambda}{numeric; Factor by which the mu will be increased
for the embedding (default: \code{20}; range: from \code{2} to \code{50})}

\item{FixEndpoints}{logical; Documentation not provided by authors}

\item{config}{A container config. See \code{\link[=container_config]{container_config()}} for more information.}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using \href{https://doi.org/10.1101/261768}{MERLoT}.

This method was wrapped inside a
\href{https://github.com/dynverse/dynmethods/tree/master/containers/merlot}{container}.
The original code of this method is available
\href{https://github.com/soedinglab/merlot}{here}.
}
\references{
Parra, R.G., Papadopoulos, N., Ahumada-Arranz, L., El Kholtei, J.,
Treutlein, B., Soeding, J., 2018. Reconstructing complex lineage trees from
scRNA-seq data using MERLoT.
}
