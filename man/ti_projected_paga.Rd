% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_projected_paga.R
\name{ti_projected_paga}
\alias{ti_projected_paga}
\title{Inferring a trajectory inference using Projected PAGA}
\usage{
ti_projected_paga(n_neighbors = 15L, n_comps = 50L, n_dcs = 15L,
  resolution = 1L, embedding_type = "fa", connectivity_cutoff = 0.05)
}
\arguments{
\item{n_neighbors}{integer; Number of neighbours for knn (default: \code{15L};
range: from \code{1L} to \code{100L})}

\item{n_comps}{integer; Number of principal components (default: \code{50L}; range:
from \code{0L} to \code{100L})}

\item{n_dcs}{integer; Number of diffusion components for denoising graph, 0
means no denoising. (default: \code{15L}; range: from \code{0L} to \code{40L})}

\item{resolution}{numeric; Resolution of louvain clustering, which determines
the granularity of the clustering. Higher values will result in more clusters.
(default: \code{1L}; range: from \code{0.1} to \code{10L})}

\item{embedding_type}{discrete; Either 'umap' (scales very well, recommended
for very large datasets) or 'fa' (ForceAtlas2, often a bit more intuitive for
small datasets). (default: \code{"fa"}; values: {\code{"umap"}, \code{"fa"}})}

\item{connectivity_cutoff}{numeric; Cutoff for the connectivity matrix
(default: \code{0.05}; range: from \code{0L} to \code{1L})}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using Projected PAGA.

This method was wrapped inside a
\href{https://github.com/dynverse/ti_projected_paga}{container}.
}
