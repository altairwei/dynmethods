% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_slice.R
\name{ti_slice}
\alias{ti_slice}
\title{Inferring a trajectory inference using SLICE}
\usage{
ti_slice(lm.method = "clustering", model.type = "tree", ss.method = "all",
  ss.threshold = 0.25, community.method = "louvain",
  cluster.method = "kmeans", k = 0L, k.max = 10L, B = 100L,
  k.opt.method = "firstmax", run_environment = NULL)
}
\arguments{
\item{lm.method}{discrete; Select "clustering" based or "graph" based method to
infer lineage model (default: \code{"clustering"}; values: {\code{"clustering"},
\code{"graph"}})}

\item{model.type}{discrete; The type of models that will be infered: "tree" -
directed minimum spanning tree based, "graph" - directed graph based (default:
\code{"tree"}; values: {\code{"tree"}, \code{"graph"}})}

\item{ss.method}{discrete; The method for defining core cell set for stable
state detection: all - all the cells in a cluster constitute the core cell set;
top - cells with scEntropy lower than the ss.threshold quantile of all the
values in a cluster constitute the core cell set; pcst - cells with scEntropy
lower than the ss.threshold quantile of all the values in a cluster constitute
the prize nodes, linear prize-collecting steiner tree algorithm is used to
approximate an optimal subnetwork, the cells in the subnetwork constitute the
core cell set. Stable states are defined as the centroids of the core cell
sets. (default: \code{"all"}; values: {\code{"all"}, \code{"top"}, \code{"pcst"}})}

\item{ss.threshold}{numeric; The threshold used when ss.method is "top" or
"pcst". Default: 0.25. (default: \code{0.25}; range: from \code{0} to \code{1})}

\item{community.method}{discrete; The method for network community detection.
Most of the community detection methods implemented in the igraph package are
supported, including "fast_greedy", "edge_betweenness", "label_prop",
"leading_eigen","louvain","spinglass", "walktrap". If this parameter is set to
"auto", the algorithm will perform all the community detection methods and
select the one that generates the communities with best modularity. Only take
effect when lm.method is "graph" (default: \code{"louvain"}; values:
{\code{"fast_greedy"}, \code{"edge_betweenness"}, \code{"label_prop"}, \code{"leading_eigen"},
\code{"louvain"}, \code{"spinglass"}, \code{"walktrap"}, \code{"auto"}})}

\item{cluster.method}{discrete; Use "kmeans" or "pam" to divide cells into
clusters. Only take effect when lm.method is "clustering" (default: \code{"kmeans"};
values: {\code{"kmeans"}, \code{"pam"}})}

\item{k}{integer; The number of cell clusters. If NULL, Gap statistic will be
used to determine an optimal k. (default: \code{0L}; range: from \code{0L} to \code{20L})}

\item{k.max}{integer; The "k.max" parameter of cluster::clusGap(); used when k
is NULL. (default: \code{10L}; range: from \code{3L} to \code{20L})}

\item{B}{integer; The "B" parameter of cluster::clusGap(); used when k is NULL
(default: \code{100L}; range: from \code{3L} to \code{500L})}

\item{k.opt.method}{discrete; The "method" parameter of cluster::maxSE(); used
when k is NULL (default: \code{"firstmax"}; values: {\code{"firstmax"}, \code{"globalmax"},
\code{"Tibs2001SEmax"}, \code{"firstSEmax"}, \code{"globalSEmax"}})}

\item{run_environment}{In which environment to run the method, can be \code{"docker"} or \code{"singularity"}.}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using \href{https://doi.org/10.1093/nar/gkw1278}{SLICE}.

This method was wrapped inside a
\href{https://github.com/dynverse/dynmethods/tree/master/containers/slice}{container}.
The original code of this method is available
\href{https://research.cchmc.org/pbge/slice.html}{here}.
}
\references{
Guo, M., Bao, E.L., Wagner, M., Whitsett, J.A., Xu, Y., 2016.
SLICE: determining cell differentiation and lineage based on single cell
entropy. Nucleic Acids Research gkw1278.
}
