% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_dpt.R, R/ti_container.R
\name{ti_dpt}
\alias{ti_dpt}
\alias{ti_dpt}
\title{Inferring trajectories with DPT}
\usage{

  ti_dpt(run_environment = ifelse(is.null(getOption("dynwrap_run_environment")),
  "local", getOption("dynwrap_run_environment")), sigma = "local",
  distance = "euclidean", ndim = 20, density_norm = TRUE,
  n_local_lower = 5, n_local_upper = 7, w_width = 0.1)


  ti_dpt(run_environment = ifelse(is.null(getOption("dynwrap_run_environment")),
  "local", getOption("dynwrap_run_environment")), sigma = "local",
  distance = "euclidean", ndim = 20, density_norm = TRUE,
  n_local_lower = 5, n_local_upper = 7, w_width = 0.1)
}
\arguments{
\item{run_environment}{In which environment to run the method, can be 'local', 'docker' or 'singularity'}

\item{sigma}{Diffusion scale parameter of the Gaussian kernel. A larger sigma might be necessary if the eigenvalues can not be found because of a singularity in the matrix. Must be one of:
\itemize{
\item{A character vector: \code{"local"} (default) or \code{"global"},}
\item{a numeric global sigma -- a global sigma will be calculated using \code{\link[destiny:find_sigmas]{destiny::find_sigmas()}}}
\item{or a \code{\link[destiny:Sigmas-class]{destiny::Sigmas-class()}} object.}
}}

\item{distance}{A \code{\link[stats:dist]{stats::dist()}} object, or a character vector specifying which distance metric to use. Allowed measures:
\itemize{
\item{Euclidean distance (default),}
\item{cosine distance (1-corr(c_1, c_2)), or}
\item{rank correlation distance (1-corr(rank(c_1), rank(c_2)))}
}}

\item{ndim}{Number of eigenvectors/dimensions to return}

\item{density_norm}{logical. If TRUE, use density normalisation}

\item{n_local_lower}{If sigma == 'local', the \code{n_local_lower}:\code{n_local_upper} nearest neighbor(s) determine(s) the local sigma}

\item{n_local_upper}{See \code{n_local_lower}}

\item{w_width}{Window width to use for deciding the branch cutoff}
}
\value{
The trajectory model
}
\description{
Inferring trajectories with DPT

Will generate a trajectory using \href{https://doi.org/10.1038/nmeth.3971}{DPT}. This method was wrapped inside a \href{https://github.com/dynverse/dynmethods/tree/master/containers/dpt}{container}.
}
\details{
This methods was first wrapped inside R, see \link{ti_dpt}

The original code of this method is available \href{https://bioconductor.org/packages/release/bioc/html/destiny.html}{here}.

The method is described in: \href{https://doi.org/10.1038/nmeth.3971}{Haghverdi, L., Büttner, M., Wolf, F.A., Buettner, F., Theis, F.J., 2016. Diffusion pseudotime robustly reconstructs lineage branching. Nature Methods 13, 845–848.}
}
