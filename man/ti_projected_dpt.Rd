% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_projected_dpt.R
\name{ti_projected_dpt}
\alias{ti_projected_dpt}
\title{Inferring a trajectory inference using Projected DPT}
\usage{
ti_projected_dpt(sigma = "local", distance = "euclidean", ndim = 20L,
  density_norm = TRUE, n_local_lower = 5L, n_local_upper = 7L,
  w_width = 0.1)
}
\arguments{
\item{sigma}{discrete; Diffusion scale parameter of the Gaussian kernel. A
larger sigma might be necessary if the eigenvalues can not be found because of
a singularity in the matrix. Must be one of:\itemize{\item A character vector:
\code{"local"} (default) or \code{"global"},\item a numeric global sigma -- a
global sigma will be calculated using
\code{\link[destiny:find_sigmas]{destiny::find_sigmas()}}\item or a
\code{\link[destiny:Sigmas-class]{destiny::Sigmas-class()}} object.} (default:
\code{"local"}; values: {\code{"local"}, \code{"global"}})}

\item{distance}{discrete; A \code{\link[stats:dist]{stats::dist()}} object, or
a character vector specifying which distance metric to use. Allowed
measures:\itemize{\item Euclidean distance (default),\item cosine distance
(1-corr(c_1, c_2)), or\item rank correlation distance (1-corr(rank(c_1),
rank(c_2)))} (default: \code{"euclidean"}; values: {\code{"euclidean"}, \code{"cosine"},
\code{"rankcor"}})}

\item{ndim}{integer; Number of eigenvectors/dimensions to return (default:
\code{20L}; range: from \code{3L} to \code{100L})}

\item{density_norm}{logical; Logical. If TRUE, use density normalisation}

\item{n_local_lower}{integer; If sigma == 'local', the
\code{n_local_lower}:\code{n_local_upper} nearest neighbor(s) determine(s) the
local sigma (default: \code{5L}; range: from \code{2L} to \code{20L})}

\item{n_local_upper}{integer; See \code{n_local_lower} (default: \code{7L}; range:
from \code{2L} to \code{20L})}

\item{w_width}{numeric; Window width to use for deciding the branch cutoff
(default: \code{0.1}; range: from \code{1e-04} to \code{1})}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using Projected DPT.

This method was wrapped inside a
\href{https://github.com/dynverse/ti_projected_dpt}{container}.
}
