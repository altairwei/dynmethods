diff --git CALISTA-R/R/AddGraph copy.R CALISTA-R/R/AddGraph copy.R
index 4a36741..5c9be0c 100644
--- CALISTA-R/R/AddGraph copy.R	
+++ CALISTA-R/R/AddGraph copy.R	
@@ -33,7 +33,7 @@ AddGraph<-function(nodes,colorMARK2,x_center,y_center,z_center,ClusterGroup2,exp
   yMaxLim=max(score3[,1])+1
   zMinLim=min(score3[,2])-1
   zMaxLim=max(score3[,2])+1
-  #x11()
+  #
   gg_data=data.frame()
   label_color=c()
   label_names=c()
diff --git CALISTA-R/R/AddGraph.R CALISTA-R/R/AddGraph.R
index 64cebb1..f49753b 100644
--- CALISTA-R/R/AddGraph.R
+++ CALISTA-R/R/AddGraph.R
@@ -33,7 +33,7 @@ AddGraph<-function(nodes,colorMARK2,x_center,y_center,z_center,ClusterGroup2,exp
   yMaxLim=max(score3[,1])+1
   zMinLim=min(score3[,2])-1
   zMaxLim=max(score3[,2])+1
-  #x11()
+  #
   gg_data=data.frame()
   label_color=c()
   label_names=c()
diff --git CALISTA-R/R/CALISTA_net_path.R CALISTA-R/R/CALISTA_net_path.R
index dc2a6d6..66f7852 100644
--- CALISTA-R/R/CALISTA_net_path.R
+++ CALISTA-R/R/CALISTA_net_path.R
@@ -52,7 +52,7 @@ CALISTA_net_path<-function(Results,INPUTS){
            }
            str="Correlation"
          })
-  #x11()
+  #
   #p1=sqrt(length(Results$PATH$CELL_path))+1
   #par(mfrow=c(p1,p1))
   for(i in 1:length(Results$PATH$CELL_path)){
@@ -60,7 +60,7 @@ CALISTA_net_path<-function(Results,INPUTS){
     xvec=yvec
     xLabel=Results$GENES$tot_transition_genes
     yLabel=Results$GENES$tot_transition_genes
-    x11()
+    
     colMap <- colorRampPalette(c("red","blue","yellow" ))(nrow(Theta[[i]]*ncol(Theta[[i]])))
     image.plot(x=xvec,
           y=yvec,
diff --git CALISTA-R/R/CALISTA_ordering2.R CALISTA-R/R/CALISTA_ordering2.R
index ed3ccaa..71232f9 100644
--- CALISTA-R/R/CALISTA_ordering2.R
+++ CALISTA-R/R/CALISTA_ordering2.R
@@ -63,7 +63,7 @@ CALISTA_ordering2<-function(Results,Parameters,DATA,n_points_interp){
   }
   
   
-  x11(title = 'CALISTA_ordering2.R')
+  
   #######################dong dong dong, plot again 
   gg_data=data.frame()
   label_color=c()
diff --git CALISTA-R/R/CALISTA_ordering_main.R CALISTA-R/R/CALISTA_ordering_main.R
index 3cd7c81..d50cf9c 100644
--- CALISTA-R/R/CALISTA_ordering_main.R
+++ CALISTA-R/R/CALISTA_ordering_main.R
@@ -133,7 +133,7 @@ CALISTA_ordering_main<-function(DATA,Results,cell_assignments){
   }
   
   
-  x11(title = 'Cell Ordering.R')
+  
   #######################dong dong dong, plot again 
   gg_data=data.frame()
   label_color=c()
diff --git CALISTA-R/R/CALISTA_path copy.R CALISTA-R/R/CALISTA_path copy.R
index 8c490bc..4f7581a 100644
--- CALISTA-R/R/CALISTA_path copy.R	
+++ CALISTA-R/R/CALISTA_path copy.R	
@@ -2,19 +2,19 @@ CALISTA_path<-function(Results,INPUTS){
   plot_fig=INPUTS$plot_fig
   hclustering=INPUTS$hclustering
   CV_plot=INPUTS$CV_plot
-  #dev.off(figure102)
-  #x11(title = '102')
+  #
+  #
   #figure102=dev.cur()
   hh=Results$TRANSITION$final_graph
   add_paths=TRUE
   count=1
   CELL_path=list()
-  x11(title = '')
+  
   figure101=dev.cur()
   while(add_paths){
     writeLines(paste("Path num: ",count))
     writeLines("\n*********************************\n")
-    #x11(display = figure101)
+    #
     grid.arrange(Results$orderP1,Results$orderP2,Results$orderP3)
     writeLines("Please check the figure 'Cell Ordering.R' for reference and  ")
     writeLines('Key the clusters in the path (e.g. 1 2 3 4):')
@@ -120,7 +120,7 @@ CALISTA_path<-function(Results,INPUTS){
       idx_subsampling=round(seq(from = 1,to=length(cells_in_path),length.out =nrow(smoothExpr[[i]]) ))
       #colorMARK_smooth_matrix=colorMARK_smooth_matrix[idx_subsampling,]
       colorMARK_smooth=colorMARK_smooth[idx_subsampling]
-      #x11()
+      #
       #plot(1:length(colorMARK_smooth),1:length(colorMARK_smooth),col=colorMARK_smooth)
       #par(mfrow=c(p1,p1))
       #p_ggplot=list()
@@ -162,7 +162,7 @@ CALISTA_path<-function(Results,INPUTS){
       transition_expression=scale(transition_expression)
       transition_expression=scale(t(transition_expression))
       rownames(transition_expression)=actual_transition_genes
-      x11(title = "heatmap")
+      
       figureheatmap=dev.cur()
       hv=heatmap(transition_expression,
               Colv = NA,
@@ -171,7 +171,7 @@ CALISTA_path<-function(Results,INPUTS){
               main = paste("Hierarchical clustering for path num:",i))
       
       
-      x11()
+      
       hv=heatmap.2(transition_expression,
                  col = greenred(255),
                  #Rowv = TRUE,
@@ -234,7 +234,7 @@ CALISTA_path<-function(Results,INPUTS){
       }
     }
     ##there is a big problem in smoothExpr function?????
-    #x11(title = "5000")
+    #
     #figure5000=dev.cur()
     ml=marrangeGrob(grobs = p_ggplot,ncol = 2,nrow = 2)
     ggsave("Mean expression profiles of transition genes.pdf",ml)
@@ -242,7 +242,7 @@ CALISTA_path<-function(Results,INPUTS){
     #grid.arrange(grobs=p_ggplot)
     
     if(CV_plot){
-      # x11(title = "6000")
+      # 
       # figure6000=dev.cur()
       # grid.arrange(grobs=p_ggplot1)  
       ml1=marrangeGrob(grobs = p_ggplot1,ncol = 2,nrow = 2)
diff --git CALISTA-R/R/CALISTA_path.R CALISTA-R/R/CALISTA_path.R
index 1e226a2..8b8e38e 100644
--- CALISTA-R/R/CALISTA_path.R
+++ CALISTA-R/R/CALISTA_path.R
@@ -2,8 +2,8 @@ CALISTA_path<-function(Results,INPUTS){
   plot_fig=INPUTS$plot_fig
   hclustering=INPUTS$hclustering
   CV_plot=INPUTS$CV_plot
-  #dev.off(figure102)
-  #x11(title = '102')
+  #
+  #
   #figure102=dev.cur()
   
   if (!"PATH" %in% names(Results)){
@@ -12,12 +12,12 @@ CALISTA_path<-function(Results,INPUTS){
   add_paths=TRUE
   count=1
   CELL_path=list()
-  x11(title = '')
+  
   figure101=dev.cur()
   while(add_paths){
     writeLines(paste("Path num: ",count))
     writeLines("\n*********************************\n")
-    #x11(display = figure101)
+    #
     grid.arrange(Results$orderP1,Results$orderP2,Results$orderP3)
     writeLines("Please check the figure 'Cell Ordering.R' for reference and  ")
     writeLines('Key the clusters in the path (e.g. 1 2 3 4):')
@@ -125,7 +125,7 @@ CALISTA_path<-function(Results,INPUTS){
       idx_subsampling=round(seq(from = 1,to=length(cells_in_path),length.out =nrow(smoothExpr[[i]]) ))
       #colorMARK_smooth_matrix=colorMARK_smooth_matrix[idx_subsampling,]
       colorMARK_smooth=colorMARK_smooth[idx_subsampling]
-      #x11()
+      #
       #plot(1:length(colorMARK_smooth),1:length(colorMARK_smooth),col=colorMARK_smooth)
       #par(mfrow=c(p1,p1))
       #p_ggplot=list()
@@ -167,7 +167,7 @@ CALISTA_path<-function(Results,INPUTS){
       transition_expression=scale(transition_expression)
       transition_expression=scale(t(transition_expression))
       rownames(transition_expression)=actual_transition_genes
-      x11(title = "heatmap")
+      
       figureheatmap=dev.cur()
       #distance= stats::dist(transition_expression, method ="euclidean")    
       #hcluster = hclust(distance, method ="average")
@@ -221,7 +221,7 @@ CALISTA_path<-function(Results,INPUTS){
       }
     }
     ##there is a big problem in smoothExpr function?????
-    #x11(title = "5000")
+    #
     #figure5000=dev.cur()
     ml=marrangeGrob(grobs = p_ggplot,ncol = 2,nrow = 2)
     ggsave("Mean expression profiles of transition genes.pdf",ml)
@@ -229,7 +229,7 @@ CALISTA_path<-function(Results,INPUTS){
     #grid.arrange(grobs=p_ggplot)
     
     if(CV_plot){
-      # x11(title = "6000")
+      # 
       # figure6000=dev.cur()
       # grid.arrange(grobs=p_ggplot1)  
       ml1=marrangeGrob(grobs = p_ggplot1,ncol = 2,nrow = 2)
diff --git CALISTA-R/R/CALISTA_transition.R CALISTA-R/R/CALISTA_transition.R
index d63222a..c060351 100644
--- CALISTA-R/R/CALISTA_transition.R
+++ CALISTA-R/R/CALISTA_transition.R
@@ -78,7 +78,7 @@ CALISTA_transition<-function(Results,DATA){
   }
   
 ################################################
-  x11(title = '101')
+  
   figure101=dev.cur()
   az=-37.5000
   el=30
@@ -141,7 +141,7 @@ CALISTA_transition<-function(Results,DATA){
            {
              NumberOfConnectedNodes=sum(!is.na(dfs(h,1,unreachable = FALSE)$order))
              writeLines(paste(i, 'edge(s) have been added and the graph is connected. \nIf you want to add another edge press "1" (then Enter)  \nIf you want to remove an edge press "2" (then Enter) \nIf you want to continue with the next step press "0" (then Enter) \n '))
-             t=readinteger()
+             t=0
              true_key=FALSE
              #0:continue
              while(true_key==FALSE){
@@ -151,9 +151,9 @@ CALISTA_transition<-function(Results,DATA){
                                        message = "Each cluster has to be connected by AT LEAST one edge!", icon = "info", type = "ok")
                    break
                  }
-                 dev.off(figure101)
+                 
                  stop_adding=TRUE
-                 x11(title="102")
+                 
                  figure102=dev.cur()
                  AddGraph_list=AddGraph(nodes,Results$colorMARK_calista,x_center,y_center,z_center,Results$final_groups,Results$expected_clusters,
                                           Results$cell_cluster_progression,Results$score3,Results$legendInfo_calista_transition,az,el,h)
@@ -176,13 +176,13 @@ CALISTA_transition<-function(Results,DATA){
                }else{
                  res1<- tkmessageBox(title = "!! Warning !!",
                                      message = "Please press '1','2','0'!", icon = "info", type = "ok")
-                 t=readinteger()
+                 t=0
                }
              }
            
              if(add_edge==TRUE && stop_adding==FALSE && true_key==TRUE){
-               dev.off(figure101)
-               x11(title = "101")
+               
+               
                figure101=dev.cur()
                MaxEdgesAdded=CheckNumberOfEdges(i+1,MaxNumberOfEdges)
                if(MaxEdgesAdded==FALSE){
@@ -207,8 +207,8 @@ CALISTA_transition<-function(Results,DATA){
                                Results$legendInfo_calista_transition,az,el);
                NumberOfConnectedNodes2=sum(!is.na(dfs(h_temp,1,unreachable = FALSE)$order))
                if(NumberOfConnectedNodes2==length(V(h))){
-                 dev.off(figure101)
-                 x11(title = "101")
+                 
+                 
                  figure101=dev.cur()
                  h=RmEdge(h,nodes[i,],Results$colorMARK_calista,x_center,y_center,z_center,
                           Results$final_groups,Results$expected_clusters,
@@ -266,8 +266,8 @@ CALISTA_transition<-function(Results,DATA){
       y_center[i]=mean(Results$score3[Results$final_groups==i,1])
       z_center[i]=mean(Results$score3[Results$final_groups==i,2])
     }
-    dev.off(figure102)
-    x11(title = '102')
+    
+    
     figure102=dev.cur()
     gg_data=data.frame()
     label_color=c()
@@ -310,9 +310,9 @@ CALISTA_transition<-function(Results,DATA){
     p1<-p1+ggtitle('plot after cluster relabeling')
     plot(p1)
     
-    dev.off(Results$figure1000)
-    dev.off(Results$figure1001)
-    x11(title="1000")
+    
+    
+    
     Results$figure1000=dev.cur()
     xMinLab=min(Results$score3[,1])
     xMaxLab=max(Results$score3[,1])
@@ -341,15 +341,15 @@ CALISTA_transition<-function(Results,DATA){
   ###remove unwanted edges before additional analysis
   hh=h
   writeLines('Press 1 if you want to remove edges, 0 otherwise:')
-  proceed=as.integer(readLines(n=1))
+  proceed=0
   # if(1){
   #   proceed=readinteger()
   # }
   
   if(proceed){
     Results$TRANSITION$clusterTEXT=1
-    #dev.off(figure102)
-    #x11(title = '102')
+    #
+    #
     #figure102=dev.cur()
     nodes_connection=get.edgelist(h)
     add_paths=TRUE
@@ -376,8 +376,8 @@ CALISTA_transition<-function(Results,DATA){
     }
     writeLines(paste(count,'edges to remove'))
     #h<-delete.edges(h,get.edge.ids(h,c(node[1],node[2])))
-    dev.off(figure102)
-    x11(title = '')
+    
+    
     figure102=dev.cur()
     gg_data=data.frame()
     label_color=c()
@@ -440,7 +440,7 @@ CALISTA_transition<-function(Results,DATA){
   #plot each predicted cluster separately
   p1=ceiling(sqrt(length(unique(Results$cluster_progression))))
   stages_name=unique(Results$cluster_progression)
-  x11(title = 'plot each predicted cluster separately')
+  
   par(mfrow=c(p1,p1))
   for(K in 1:length(stages_name)){
     actual_stage=which(Results$cluster_progression==stages_name[K])
@@ -504,4 +504,4 @@ CALISTA_transition<-function(Results,DATA){
   Results$TRANSITION$nodes_connection=nodes_connection3
   Results$cluster_distance=cluster_distance
   return(Results)
-}
\ No newline at end of file
+}
diff --git CALISTA-R/R/CALISTA_transition_genes.R CALISTA-R/R/CALISTA_transition_genes.R
index 2f460b6..e8e5a9d 100644
--- CALISTA-R/R/CALISTA_transition_genes.R
+++ CALISTA-R/R/CALISTA_transition_genes.R
@@ -10,7 +10,7 @@ CALISTA_transition_genes<-function(Results,DATA,Parameters,my_results_final,thr)
   num_transition_genes=list()
   final_transition_genes=list()
   null_LL=list()
-  x11(title = 'CALISTA_transition_genes')
+  
   par(mfrow=c(p[1],p[2]))
   for(i in 1:nrow(nodes_connection2)){
     count=1
diff --git CALISTA-R/R/CALISTA_transition_genes_main.R CALISTA-R/R/CALISTA_transition_genes_main.R
index debad50..0e6c7ee 100644
--- CALISTA-R/R/CALISTA_transition_genes_main.R
+++ CALISTA-R/R/CALISTA_transition_genes_main.R
@@ -93,7 +93,7 @@ CALISTA_transition_genes_main<-function(DATA,INPUTS,Results,cell_assignments){
   num_transition_genes=list()
   final_transition_genes=list()
   null_LL=list()
-  x11(title = 'CALISTA_transition_genes')
+  
   par(mfrow=c(p[1],p[2]))
   for(i in 1:nrow(nodes_connection2)){
     count=1
diff --git CALISTA-R/R/Plot_cluster_mean_exp.R CALISTA-R/R/Plot_cluster_mean_exp.R
index b395f83..7b3e50e 100644
--- CALISTA-R/R/Plot_cluster_mean_exp.R
+++ CALISTA-R/R/Plot_cluster_mean_exp.R
@@ -9,7 +9,7 @@ Plot_cluster_mean_exp<-function(Results,DATA){
     MEAN[,i]=rowMeans(D[[i]])
   }
   
-  #x11(title = 'Plotting  mean gene expression')
+  #
   #par(mfrow=c(p1,p1))
   for(j in 1:DATA$numGENES){
     gg_data=data.frame()
@@ -51,7 +51,7 @@ Plot_cluster_mean_exp<-function(Results,DATA){
     #par(new=TRUE)
   }
   #grid.arrange(grobs=p_ggplot)
-  #x11()
+  #
   ml=marrangeGrob(grobs = p_ggplot,ncol = 2,nrow = 2)
   ggsave("Plotting  mean gene expression.pdf",ml)
   writeLines('\n Done! Mean gene expression plot is saved in "Plotting  mean gene expression.pdf" in current working directory  \n')
diff --git CALISTA-R/R/cell_variability.R CALISTA-R/R/cell_variability.R
index baf0b9f..f499350 100644
--- CALISTA-R/R/cell_variability.R
+++ CALISTA-R/R/cell_variability.R
@@ -13,7 +13,7 @@ cell_variability<-function(Results,DATA){
   }
   min_num_cells=10
   H=entropy_calculation(DDD,min_num_cells)
-  x11(title = 'cell_variability')
+  
   par(mfrow=c(2,2))
   boxplot.matrix(t(H),main='Boxplot for the entropy',
                  xlab='Cluster',ylab='Entropy')
diff --git CALISTA-R/R/eigengap.R CALISTA-R/R/eigengap.R
index fab26ea..3bd9769 100644
--- CALISTA-R/R/eigengap.R
+++ CALISTA-R/R/eigengap.R
@@ -3,27 +3,28 @@ eigengap<-function(consensus,max_clust){
   L=D-consensus
   #Dtemp=expm(-1/2*logm(D))
   #Dtemp=D%^%(-1/2)
-  E <- eigen(D) 
-  V <- E$values 
-  Q <- E$vectors 
-  Dtemp <- Q%*%diag(1/sqrt(V))%*%t(Q) 
+  E <- eigen(D)
+  V <- E$values
+  Q <- E$vectors
+  Dtemp <- Q%*%diag(1/sqrt(V))%*%t(Q)
   L=Dtemp%*%L%*%Dtemp
   v=eigen(L)$value
   v=sort(v)
-  x11()
-  all_diff=get_diff(v[1:max_clust])
-  ind_maxdiff=which(all_diff==max(all_diff))[1]
-  plot(v[1:max_clust],col="blue",type="p",
+
+  min_clust=3
+  all_diff=get_diff(v[min_clust:max_clust])
+  ind_maxdiff=which(all_diff==max(all_diff))[1] + (min_clust-1)
+  plot(min_clust:max_clust, v[min_clust:max_clust],col="blue",type="p",
        main="Eigengap value",
        xlab="Number of cluster",ylab="")
   points(ind_maxdiff,v[ind_maxdiff],col="red")
   writeLines(paste("Optimal number of cluster according to max. eigenvalue:",ind_maxdiff,"\nif you want to use this value press 0, else provide desired number of cluster:"))
-  input1=as.integer(readLines(n=1))
+  input1=0
   if(input1==0){
     expected_clusters=ind_maxdiff
   }else{
     expected_clusters=input1
   }
-  
+
   return(expected_clusters)
-}
\ No newline at end of file
+}
diff --git CALISTA-R/R/find_progression2.R CALISTA-R/R/find_progression2.R
index cfdd2ba..019145d 100644
--- CALISTA-R/R/find_progression2.R
+++ CALISTA-R/R/find_progression2.R
@@ -12,7 +12,7 @@ find_progression2<-function(Results,DATA,method){
     if(is.null(Results$starting_method)||Results$starting_method!=1||Results$starting_method!=2){
       writeLines('\nNo time info found. Please enter the starting cell or the marker gene whenever available\n')
       writeLines('Press 1 to enter the starting cell, 2 to enter the marker gene, 3 otherwise: ')
-      Results$starting_method=readLines(n=1)
+      Results$starting_method=3
       Results$starting_method=as.integer(Results$starting_method)
     }
     switch (Results$starting_method,
diff --git CALISTA-R/R/import_data.R CALISTA-R/R/import_data.R
index 7e66152..1f63238 100644
--- CALISTA-R/R/import_data.R
+++ CALISTA-R/R/import_data.R
@@ -114,6 +114,7 @@ import_data <-function(INPUTS){
     # INPUTS$perczeros_cells=100
     # INPUTS$perc_top_genes=50
   }
+  data_location=INPUTS$data_location
   data_type=INPUTS$data_type
   format_data=INPUTS$format_data
   data_selection=INPUTS$data_selection
@@ -127,9 +128,9 @@ import_data <-function(INPUTS){
   if(data_type>=1){
     
     # here normalization == old code.selection.load data at the beging(DATA.timelime,.time,.unm_time,.totDATA,.genes,.singeCELLDATA...)
-    DATA=normalization(data_type,format_data,perczeros_genes,perczeros_cells,cut_variable_genes,cells_2_cut)
+    DATA=normalization(data_location,data_type,format_data,perczeros_genes,perczeros_cells,cut_variable_genes,cells_2_cut)
   }else{
-    DATA=normalization(data_type,format_data,perczeros_genes,perczeros_cells,NULL,cells_2_cut=cells_2_cut)
+    DATA=normalization(data_location,data_type,format_data,perczeros_genes,perczeros_cells,NULL,cells_2_cut=cells_2_cut)
   }
   
   ###check input arguments
diff --git CALISTA-R/R/jump_transition.R CALISTA-R/R/jump_transition.R
index bd5a621..6fffbc1 100644
--- CALISTA-R/R/jump_transition.R
+++ CALISTA-R/R/jump_transition.R
@@ -17,7 +17,7 @@ jump_transition <- function(DATA,Results){
   }
   
   
-  x11(title = '101')
+  
   figure101=dev.cur()
   az=-37.5000
   el=30
@@ -123,7 +123,7 @@ jump_transition <- function(DATA,Results){
   #plot each predicted cluster separately
   p1=ceiling(sqrt(length(unique(Results$cluster_progression))))
   stages_name=unique(Results$cluster_progression)
-  x11(title = 'plot each predicted cluster separately')
+  
   par(mfrow=c(p1,p1))
   for(K in 1:length(stages_name)){
     actual_stage=which(Results$cluster_progression==stages_name[K])
diff --git CALISTA-R/R/normalization.R CALISTA-R/R/normalization.R
index 9ee3065..6c9b61d 100644
--- CALISTA-R/R/normalization.R
+++ CALISTA-R/R/normalization.R
@@ -1,36 +1,36 @@
-normalization <-function(data_type,format_data,perczeros_genes,perczeros_cells,cut_variable_genes,cells_2_cut){
-  filename=file.choose()
+normalization <-function(data_location,data_type,format_data,perczeros_genes,perczeros_cells,cut_variable_genes,cells_2_cut){
+  filename=data_location
   # choose what kind of file? /home/Tao/Pro/AAA-CALISTA/RT-qPCR/6-data_WITH_VPA_0_24_48_72_CT_NORM.xlsx
-  #imported_temp=read.xlsx(filename,1)  # in matlab code, imported_data.data is data, imported_data.text data is first line
-  filetype=file_ext(filename)
+  #imported_temp=read.xlsx(data_location,1)  # in matlab code, imported_data.data is data, imported_data.text data is first line
+  filetype=file_ext(data_location)
   if(filetype=='xlsx'){
-    imported_temp=read.xlsx(filename,1,rowNames = FALSE)
+    imported_temp=read.xlsx(data_location,1,rowNames = FALSE)
     imported_temp=na.omit(imported_temp)
   }else 
   {
     if(format_data!=4){
-      imported_temp=fread(filename,header = TRUE,
+      imported_temp=fread(data_location,header = TRUE,
                           stringsAsFactors = TRUE,
                           data.table = FALSE,blank.lines.skip = TRUE)
       imported_temp=na.omit(imported_temp)
     }else{
-      imported_temp=fread(filename,header = FALSE,
+      imported_temp=fread(data_location,header = FALSE,
                           stringsAsFactors = TRUE,
                           data.table = FALSE,blank.lines.skip = TRUE)
       imported_temp=na.omit(imported_temp)
     }
   }
   #   if(filetype=='csv'){
-  #   imported_temp=read.csv(filename,header=FALSE,as.is = FALSE,stringsAsFactors = FALSE)
+  #   imported_temp=read.csv(data_location,header=FALSE,as.is = FALSE,stringsAsFactors = FALSE)
   #   imported_temp=na.omit(imported_temp)
   # }else{
-  #   imported_temp=read.table(filename,header = FALSE,stringsAsFactors = FALSE)
+  #   imported_temp=read.table(data_location,header = FALSE,stringsAsFactors = FALSE)
   #   imported_temp=na.omit(imported_temp)
   # }
   writeLines('\nData loading...\n')
   imported_data=list()
   DATA=list()
-  DATA$FileName=filename
+  DATA$FileName=data_location
   switch (format_data,
           {
             #1
diff --git CALISTA-R/R/visualization.R CALISTA-R/R/visualization.R
index 0ed5ab5..3ba4f4e 100644
--- CALISTA-R/R/visualization.R
+++ CALISTA-R/R/visualization.R
@@ -52,7 +52,7 @@ visualization<-function(reduction,DATA,Results){
     c[idx_tmp,]=rep(colorMARK_calista[Results$cluster_predicted[i]],length(idx_tmp))
   }
   #plot using par
-  x11()
+  
   #par(mfrow=c(1,2))
   xMinLab=min(score3[,1])
   xMaxLab=max(score3[,1])
@@ -80,7 +80,7 @@ visualization<-function(reduction,DATA,Results){
   legend('topright',mtextlab, pch = 16,col = colorMARK_time[1:DATA$num_time_points])
   
 #######################test######################
-  x11(title = 'original time/cell stage info(2D)')
+  
   gg_data=data.frame()
   label_color=c()
   label_names=c()
@@ -114,7 +114,7 @@ visualization<-function(reduction,DATA,Results){
 ###########test###################  
   
   
-  x11(title="1000")
+  
   Results$figure1000=dev.cur()
   
   for (i in 1:length(cluster_predicted)) {
@@ -135,7 +135,7 @@ visualization<-function(reduction,DATA,Results){
   legend('topright',unlist(Results$legendInfo_calista), pch = 16,col = colorMARK_calista[1:length(cluster_predicted)])
   
   #######################test######################
-  x11(title = 'Cell Clustering(2D)')
+  
   Results$figure1001=dev.cur()
   gg_data=data.frame()
   label_color=c()
